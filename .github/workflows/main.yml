name: Build and Deploy to Server

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run linting
        run: npm run lint

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create production .env file from template
        run: |
          # Replace template placeholders with secrets
          sed 's/{{PUBLIC_CDN_URL}}/${{ secrets.PUBLIC_CDN_URL }}/g; \
               s/{{WEBHOOK_JWT_SECRET}}/${{ secrets.WEBHOOK_JWT_SECRET }}/g; \
               s/{{N8N_CONTACT_WEBHOOK_URL}}/${{ secrets.N8N_CONTACT_WEBHOOK_URL }}/g; \
               s/{{N8N_HEALTH_CHECK_WEBHOOK_URL}}/${{ secrets.N8N_HEALTH_CHECK_WEBHOOK_URL }}/g; \
               s/{{PUBLIC_TAWK_PROPERTY_ID}}/${{ secrets.PUBLIC_TAWK_PROPERTY_ID }}/g; \
               s/{{PUBLIC_TAWK_WIDGET_ID}}/${{ secrets.PUBLIC_TAWK_WIDGET_ID }}/g; \
               s/{{PUBLIC_BUSINESS_NAME}}/J² IT Solutions/g; \
               s/{{PUBLIC_BUSINESS_ALT_NAME}}/J2IT/g; \
               s/{{PUBLIC_BUSINESS_URL}}/https:\/\/www.j2it.us/g; \
               s/{{PUBLIC_BUSINESS_DESCRIPTION}}/Affordable IT support and web solutions for small businesses. Flat monthly pricing, no contracts, personal service./g; \
               s/{{PUBLIC_BUSINESS_PHONE}}/${{ secrets.PUBLIC_BUSINESS_PHONE }}/g; \
               s/{{PUBLIC_BUSINESS_EMAIL}}/contact@j2it.us/g; \
               s/{{PUBLIC_BUSINESS_PRICE_RANGE}}/\$\$/g; \
               s/{{PUBLIC_BUSINESS_STREET}}/${{ secrets.PUBLIC_BUSINESS_STREET }}/g; \
               s/{{PUBLIC_BUSINESS_CITY}}/${{ secrets.PUBLIC_BUSINESS_CITY }}/g; \
               s/{{PUBLIC_BUSINESS_STATE}}/${{ secrets.PUBLIC_BUSINESS_STATE }}/g; \
               s/{{PUBLIC_BUSINESS_ZIP}}/${{ secrets.PUBLIC_BUSINESS_ZIP }}/g; \
               s/{{PUBLIC_BUSINESS_COUNTRY}}/${{ secrets.PUBLIC_BUSINESS_COUNTRY }}/g; \
               s/{{PUBLIC_BUSINESS_LATITUDE}}/${{ secrets.PUBLIC_BUSINESS_LATITUDE }}/g; \
               s/{{PUBLIC_BUSINESS_LONGITUDE}}/${{ secrets.PUBLIC_BUSINESS_LONGITUDE }}/g; \
               s/{{PUBLIC_FOUNDER_NAME}}/Jamaal Ephriam/g; \
               s/{{PUBLIC_FOUNDER_TITLE}}/IT Solutions Expert/g; \
               s/{{PUBLIC_BUSINESS_AREA_SERVED}}/Florida/g; \
               s/{{PUBLIC_BUSINESS_HOURS_DAYS}}/Monday,Tuesday,Wednesday,Thursday,Friday/g; \
               s/{{PUBLIC_BUSINESS_HOURS_OPEN}}/09:00/g; \
               s/{{PUBLIC_BUSINESS_HOURS_CLOSE}}/17:00/g; \
               s/{{CARD_JAMAAL_NAME}}/J² IT Solutions/g; \
               s/{{CARD_JAMAAL_PERSON}}/Jamaal Ephriam/g; \
               s/{{CARD_JAMAAL_TITLE}}/IT Solutions Expert/g; \
               s/{{CARD_JAMAAL_PHONE}}/754-423-8730/g; \
               s/{{CARD_JAMAAL_EMAIL}}/jamaal@j2it.us/g; \
               s/{{CARD_JAMAAL_STREET}}//g; \
               s/{{CARD_JAMAAL_CITY}}/Coconut Creek/g; \
               s/{{CARD_JAMAAL_STATE}}/FL/g; \
               s/{{CARD_JAMAAL_ZIP}}/33073/g; \
               s/{{CARD_JAMAAL_COUNTRY}}/USA/g; \
               s/{{CARD_JAMAAL_IMAGE}}/Jamaal_Photo.webp/g' \
               .env.production.template > .env
          scp .env ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }}:${{ secrets.SERVER_DIRECTORY }}/.env

      - name: Build project
        run: npm run build

      - name: Verify build completed
        run: |
          if [ ! -f "build/index.js" ]; then
            echo "Build failed - index.js not found"
            exit 1
          fi
          echo "Build completed successfully"

      - name: Upload build and dependencies
        run: |
          ls -la build/
          scp -r build ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }}:${{ secrets.SERVER_DIRECTORY }}/
          scp package.json package-lock.json ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }}:${{ secrets.SERVER_DIRECTORY }}/

      - name: SSH and run post-deploy commands
        run: |
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} << 'EOF'
          set -e

          cd ${{ secrets.SERVER_DIRECTORY }}

          echo "Cleaning up old node_modules..."
          rm -rf node_modules

          echo "Installing production dependencies..."
          npm ci --omit=dev

          echo "Restarting app with PM2..."
          pm2 delete j2it.us || true
          PORT=${{ secrets.APP_PORT }} pm2 start build/index.js --name j2it.us
          pm2 save
          EOF
