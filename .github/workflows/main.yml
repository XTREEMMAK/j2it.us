name: Build and Deploy to Server

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run linting
        run: npm run lint

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create production .env file from template
        run: |
          # Create .env file by replacing template placeholders
          cp .env.production.template .env
          
          # Debug: Check if secrets contain placeholder patterns
          if [[ "${{ secrets.WEBHOOK_JWT_SECRET }}" == *"{{"* ]]; then
            echo "ERROR: WEBHOOK_JWT_SECRET secret contains '{{' - it appears to be malformed!"
            echo "Please update the WEBHOOK_JWT_SECRET secret in GitHub to contain only the actual secret value."
            exit 1
          fi

          # Replace secrets (use | as delimiter to avoid conflicts with URLs)
          sed -i 's|{{PUBLIC_CDN_URL}}|${{ secrets.PUBLIC_CDN_URL }}|g' .env
          sed -i 's|{{WEBHOOK_JWT_SECRET}}|${{ secrets.WEBHOOK_JWT_SECRET }}|g' .env
          sed -i 's|{{N8N_CONTACT_WEBHOOK_URL}}|${{ secrets.N8N_CONTACT_WEBHOOK_URL }}|g' .env
          sed -i 's|{{N8N_HEALTH_CHECK_WEBHOOK_URL}}|${{ secrets.N8N_HEALTH_CHECK_WEBHOOK_URL }}|g' .env
          sed -i 's|{{PUBLIC_TAWK_PROPERTY_ID}}|${{ secrets.PUBLIC_TAWK_PROPERTY_ID }}|g' .env
          sed -i 's|{{PUBLIC_TAWK_WIDGET_ID}}|${{ secrets.PUBLIC_TAWK_WIDGET_ID }}|g' .env

          # Replace hardcoded values (use | as delimiter)
          sed -i 's|{{PUBLIC_BUSINESS_NAME}}|J² IT Solutions|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_ALT_NAME}}|J2IT|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_URL}}|https://www.j2it.us|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_DESCRIPTION}}|Affordable IT support and web solutions for small businesses. Flat monthly pricing, no contracts, personal service.|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_EMAIL}}|contact@j2it.us|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_PRICE_RANGE}}|$$|g' .env
          sed -i 's|{{PUBLIC_FOUNDER_NAME}}|Jamaal Ephriam|g' .env
          sed -i 's|{{PUBLIC_FOUNDER_TITLE}}|IT Solutions Expert|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_AREA_SERVED}}|Florida|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_HOURS_DAYS}}|Monday,Tuesday,Wednesday,Thursday,Friday|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_HOURS_OPEN}}|09:00|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_HOURS_CLOSE}}|17:00|g' .env

          # Replace location secrets (use | as delimiter)
          sed -i 's|{{PUBLIC_BUSINESS_PHONE}}|${{ secrets.PUBLIC_BUSINESS_PHONE }}|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_STREET}}|${{ secrets.PUBLIC_BUSINESS_STREET }}|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_CITY}}|${{ secrets.PUBLIC_BUSINESS_CITY }}|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_STATE}}|${{ secrets.PUBLIC_BUSINESS_STATE }}|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_ZIP}}|${{ secrets.PUBLIC_BUSINESS_ZIP }}|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_COUNTRY}}|${{ secrets.PUBLIC_BUSINESS_COUNTRY }}|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_LATITUDE}}|${{ secrets.PUBLIC_BUSINESS_LATITUDE }}|g' .env
          sed -i 's|{{PUBLIC_BUSINESS_LONGITUDE}}|${{ secrets.PUBLIC_BUSINESS_LONGITUDE }}|g' .env

          # Replace card info (use | as delimiter)
          sed -i 's|{{CARD_JAMAAL_NAME}}|J² IT Solutions|g' .env
          sed -i 's|{{CARD_JAMAAL_PERSON}}|Jamaal Ephriam|g' .env
          sed -i 's|{{CARD_JAMAAL_TITLE}}|IT Solutions Expert|g' .env
          sed -i 's|{{CARD_JAMAAL_PHONE}}|754-423-8730|g' .env
          sed -i 's|{{CARD_JAMAAL_EMAIL}}|jamaal@j2it.us|g' .env
          sed -i 's|{{CARD_JAMAAL_STREET}}||g' .env
          sed -i 's|{{CARD_JAMAAL_CITY}}|Coconut Creek|g' .env
          sed -i 's|{{CARD_JAMAAL_STATE}}|FL|g' .env
          sed -i 's|{{CARD_JAMAAL_ZIP}}|33073|g' .env
          sed -i 's|{{CARD_JAMAAL_COUNTRY}}|USA|g' .env
          sed -i 's|{{CARD_JAMAAL_IMAGE}}|Jamaal_Photo.webp|g' .env

          # Validate that all placeholders were replaced
          if grep -q '{{' .env; then
            echo "Error: Unreplaced placeholders found in .env file:"
            grep '{{' .env
            exit 1
          fi

          echo "✅ Environment file created successfully"

      - name: Build project
        run: npm run build

      - name: Verify build completed
        run: |
          if [ ! -f "build/index.js" ]; then
            echo "Build failed - index.js not found"
            exit 1
          fi
          echo "Build completed successfully"

      - name: Upload build and dependencies
        run: |
          ls -la build/
          # First, backup and remove old .env file on server to ensure clean deployment
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} "cd ${{ secrets.SERVER_DIRECTORY }} && [ -f .env ] && cp .env .env.backup || true"
          # Upload the new .env file
          scp .env ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }}:${{ secrets.SERVER_DIRECTORY }}/.env
          # Upload build and dependencies
          scp -r build ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }}:${{ secrets.SERVER_DIRECTORY }}/
          scp package.json package-lock.json ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }}:${{ secrets.SERVER_DIRECTORY }}/

      - name: SSH and run post-deploy commands
        run: |
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} << 'EOF'
          set -e

          cd ${{ secrets.SERVER_DIRECTORY }}

          echo "Cleaning up old node_modules..."
          rm -rf node_modules

          echo "Installing production dependencies..."
          npm ci --omit=dev

          echo "Restarting app with PM2..."
          pm2 delete j2it.us || true
          PORT=${{ secrets.APP_PORT }} pm2 start build/index.js --name j2it.us
          pm2 save
          EOF
